
// libmylcd - http://mylcd.sourceforge.net/
// An LCD framebuffer library
// Michael McElligott
// okio@users.sourceforge.net

//  Copyright (c) 2005-2009  Michael McElligott
// 
//  This program is free software; you can redistribute it and/or
//  modify it under the terms of the GNU LIBRARY GENERAL PUBLIC LICENSE
//  as published by the Free Software Foundation; either version 2
//  of the License, or (at your option) any later version.
//
//  This program is distributed in the hope that it will be useful,
//  but WITHOUT ANY WARRANTY; without even the implied warranty of
//  MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
//  GNU LIBRARY GENERAL PUBLIC LICENSE for more details.
//
//	You should have received a copy of the GNU Library General Public
//	License along with this library; if not, write to the Free
//	Software Foundation, Inc., 675 Mass Ave, Cambridge, MA 02139, USA.



#ifndef _PLYTV_H_
#define _PLYTV_H_



#define NODE_OBJTYPE_PLC			(1)
#define NODE_OBJTYPE_TRACK			(2)
#define NODE_OBJTYPE_DETAIL			(3)
#define NODE_OBJTYPE_IMAGE			(4)

#define ITEM_DETAIL_IMAGE_ARTWORK	(1)
#define ITEM_DETAIL_IMAGE_PLAY		(2)
#define ITEM_DETAIL_IMAGE_PAUSE		(3)
#define ITEM_DETAIL_IMAGE_STOP		(4)


typedef struct {
	//TFRAME *tvplay;
	//TFRAME *tvpause;
	//TFRAME *tvstop;
	//TFRAME *noart;
	
	int tvplayId;
	int tvpauseId;
	int tvstopId;
	int noartId;
	
	THWD *hw;
	TMETATAGCACHE *tagc;
	TVLCPLAYER *vp;
}PLYTVPLCDEPENDENTS;

typedef struct {
	int objType;			// playlist or track item (NODE_OBJTYPE_)
	
	struct{
		int pid;			// playlist uid
		int position;
	}playlist;
	
	struct{
		int pid;
		int position;		// track n of the above playlist
	}track;

	struct{
		int pid;
		int position;		// track n of the above playlist
	}detail;

	struct{
		int pid;
		int position;		// track n of the above playlist
		int type;			// play, pause, stop, etc..
	}image;
}TTV_NODE_DESC_OPAQUE;


typedef struct {
	TPAGE2COM *com;
	
	double imgArtSize;
	int shadowPre;
	int shadow;
	int buildNo;
	int current;			// id of last selected image (play, pause, etc..)

	TTOUCHSWIPE swipe;
	TTV *tv;
	
	TLABEL *imgovr;			// image overlay containing selected track artwork
	int imgovrArtId;		// id generated by TLABEL referncing image object within TLABEL
	int imgovrImageId;		// id generated by TLABEL referncing image object within TLABEL
	
	TCCBUTTONS *btns;
	
	struct{
		int play;
		int pause;
		int stop;
		int noart;
	}artc;
}TPLYTV;



int page_plyTvCallback (void *pageStruct, const int msg, int64_t dataInt1, int64_t dataInt2, void *dataPtr, void *opaquePtr);

int plytvTvReload (TPLYTV *plytv, TTV *tv, PLAYLISTCACHE *plc);
void plytvTvRenderRebuild (TTV *tv);


void plytvRefresh (TVLCPLAYER *vp);


void plytvButtonsSetState (TPLYTV *plytv, TCCBUTTONS *btns, const int state);

#endif

